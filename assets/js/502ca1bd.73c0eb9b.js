"use strict";(self.webpackChunkmy_github=self.webpackChunkmy_github||[]).push([[68981],{26732:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var a=t(74848),i=t(28453);const s={title:"smali2java -  \u6b63\u5219\u8868\u8fbe\u5f0f\u5316",tags:["smali2java","\u6b63\u5219\u8868\u8fbe\u5f0f","\u9879\u76ee"],authors:"cttmayi"},r=void 0,o={permalink:"/blog/2019/04/30/smali2java\u6b63\u5219\u8868\u8fbe\u5f0f\u5316",source:"@site/blog/2019-04-30-smali2java\u6b63\u5219\u8868\u8fbe\u5f0f\u5316/index.md",title:"smali2java -  \u6b63\u5219\u8868\u8fbe\u5f0f\u5316",description:"\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb, \u786e\u5b9e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8868\u8fbe\u65b9\u5f0f\u6bd4\u7528string.split\u4f18\u7f8e\u5f88\u591a.",date:"2019-04-30T00:00:00.000Z",formattedDate:"2019\u5e744\u670830\u65e5",tags:[{label:"smali2java",permalink:"/blog/tags/smali-2-java"},{label:"\u6b63\u5219\u8868\u8fbe\u5f0f",permalink:"/blog/tags/\u6b63\u5219\u8868\u8fbe\u5f0f"},{label:"\u9879\u76ee",permalink:"/blog/tags/\u9879\u76ee"}],readingTime:.97,hasTruncateMarker:!1,authors:[{name:"Ling Yuan",title:"Engineer",url:"https://github.com/cttmayi",imageURL:"https://github.com/cttmayi.png",key:"cttmayi"}],frontMatter:{title:"smali2java -  \u6b63\u5219\u8868\u8fbe\u5f0f\u5316",tags:["smali2java","\u6b63\u5219\u8868\u8fbe\u5f0f","\u9879\u76ee"],authors:"cttmayi"},unlisted:!1,prevItem:{title:"smali2java - \u6d4b\u8bd5\u4ee3\u7801",permalink:"/blog/2019/05/04/smali2java\u6d4b\u8bd5\u4ee3\u7801"},nextItem:{title:"VAK\u6d4b\u8bd5\u8868",permalink:"/blog/2019/04/28/VAK\u6d4b\u8bd5\u8868"}},l={authorsImageUrls:[void 0]},m=[];function c(n){const e={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb, \u786e\u5b9e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8868\u8fbe\u65b9\u5f0f\u6bd4\u7528string.split\u4f18\u7f8e\u5f88\u591a.\n\u4e3b\u8981\u901a\u8fc7match + groups\u7684\u7ec4\u5408\u53ef\u8f7b\u677e\u5b8c\u6210\u5339\u914d\n\u5177\u4f53\u4ee3\u7801\u53c2\u8003: ",(0,a.jsx)(e.a,{href:"https://github.com/cttmayi/smaii2java/blob/master/re_gra.py",children:"https://github.com/cttmayi/smaii2java/blob/master/re_gra.py"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"class ReGra:\n    NUM = '(\\d+)'\n    NUM_16 = '([\\dx]+)'\n    ATTS = '((\\w+ +)*) *'\n    CLS = '(L[a-zA-Z/]+;)'\n    VAR = '(\\w+)'\n    VT = '([\\w/;]+)'\n    FUN = '(\\w+)'\n    PARAMS = '([\\[a-zA-Z/;]*)'\n    FT = '([\\w/;]+)'\n    REG = '(\\w\\d)'\n\n    GS = [\n        # .line 84\n        ['.line', ['\\.line +', NUM], ['NUM']],\n        # .class public Landroidx/activity/ComponentActivity;\n        ['.class', ['\\.class +', ATTS, CLS], ['ATTS', None, 'CLS']],\n        # .super Landroid/text/TextWatcher;\n        ['.super', ['\\.super +', CLS], ['CLS']],\n        # .implements Landroid/text/TextWatcher;\n        ['.implements', ['\\.implements +', CLS], ['CLS']],\n        # .field private static final COLUMN_INDEX_FIRST:I = 0x0\n        ['.field', ['\\.field +', ATTS, VAR, ':', VT, '( += +', NUM_16, ')*'], ['ATTS', None, 'VAR', 'VT', None, 'VAL']],\n        # .end field\n        ['.end field', None, None],\n        # .method public static main([Ljava/lang/String;)V\n        ['.method', ['\\.method +', ATTS, FUN, '\\(', PARAMS, '\\)', FT], ['ATTS', None, 'FUN', 'PARAMS', 'FT']],\n        # .end method\n        ['.end method', None, None],\n        # .param p0, \"feedbackType\"    # I   @baksmali\n        ['.param', ['\\.param +', REG, '(, +\"', VAR, '\")*'], ['REG', None, 'VAR']],\n        # .end param\n        ['.end param', None, None],\n\n    ]\n\n    def __init__(self):\n        for gs in self.GS:\n            if gs[1] is not None:\n                gs[1] = ''.join(gs[1])\n        pass\n\n    @staticmethod\n    def to(line):\n        ret = {}\n        for g in ReGra.GS:\n            g_start = g[0]\n            g_pattern = g[1]\n            g_keys = g[2]\n            if line.startswith(g_start):\n                ret['CMD'] = g_start\n                if g_pattern is not None:\n                    mat = re.match(g_pattern, line)\n                    if mat:\n                        groups = mat.groups()\n                        for i in range(len(g_keys)):\n                            key = g_keys[i]\n                            value = groups[i]\n                            if value is not None and key is not None:\n                                ret[key] = value.strip()\n                return ret\n\n        return None\n"})})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>o});var a=t(96540);const i={},s=a.createContext(i);function r(n){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);